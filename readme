#! /bin/bash
#export PS1='[\u@\h:\w ]$ '
function parse_git_branch() {
     git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}

export PATH="$PATH:/vol/proj/olympus/work/sw/svenkatraman/stuff/texlive/2016/bin/x86_64-linux/"

#export PS1="\[\e[0;36m\]$(parse_git_branch)\[\e[m\]\[\e[0;32m\][\h:\w]\[\e[m\] \[\e[0;37m\]\n-> \[\e[m\]\[\e[0m\]"
export PS1="\[\033[33m\$(parse_git_branch)\[\033[00m\][\h:\[\033[32m\]\w]\n-> \[\e[m\]\[\e[0m\]"

# User specific aliases and functions (in .bashrc)


alias c="source ~/.bashrc"

alias tags="find . \( -name '[^.]*.[chlyCGHL]' \) -print > cscope.files; find . -name '*.py' -print >> cscope.files; cscope -buk -F cscope.files;"
alias tags++="find . -name '*.c' -print > cscope.files && find . -name '*.cc' -print >> cscope.files && find . -name '*.C' -print >> cscope.files && find . -name '*.hpp' -print >> cscope.files && find . -name '*.h' -print >> cscope.files && find . -name '*.cpp' -print >> cscope.files && find . -name '*.h.gen' -print >> cscope.files  && cscope -buk -F cscope.files;"
alias tags1++="find . -path ./build -prune -o -name '*.c' -print > cscope.files && find . -path ./build -prune -o -name '*.cc' -print >> cscope.files && find . -path ./build -prune -o -name '*.hpp' -print >> cscope.files && find . -path ./build -prune -o -name '*.h' -print >> cscope.files && find . -path ./build -prune -o -name '*.cpp' -print >> cscope.files && find . -path ./build -prune -o -name '*.h.gen' -print >> cscope.files  && cscope -buk -F cscope.files;"
alias vncstart='vncserver  -geometry 1920x1080 -depth 16'
alias vncstop='vncserver -kill :$*'
alias l='ls --color -l'

alias ga='git add -u'
alias go='git co '
alias gc='git commit -m '
alias gp='git push origin '
alias gm='git checkout master '
alias gpr='git pull --rebase'
alias gs='git status'
alias gsta='git stash'
alias gpop='git stash pop'
alias gd='git diff --staged'
alias gb='git branch'
alias gch='git diff --staged > changes.diff'
alias g='cat ~/.bashrc_USER|grep git'
alias gcch='git log -1 | grep commit | awk "{ print $2 }" | xargs -n 1 git show >& changes.diff'
alias gclean='git branch | grep -v " master" | grep -v ^* | xargs git branch -D'
alias gcch='git branch | grep ^* | cut -d " " -f2 | xargs -n 1 git diff origin/master >& changes.diff'
function gbn() {
    git checkout -b $1 origin/master
}
function gco() {
    git checkout -b $1 origin/$1
}
function gri() {
    git rebase -i HEAD~$1
}
function gup() {
    git checkout -b $1 origin/$1
    git rebase origin/master
    git push -f origin $1
    git checkout master
    git branch -D $1
}
alias gbd='git push origin --delete '
alias gpf='git push -f origin '
alias gws='git rebase HEAD~1 --whitespace=fix'
alias grb='git for-each-ref --format=" %(authorname) %09 %(refname)" '
alias grbm='git for-each-ref --format=" %(authorname) %09 %(refname)" | grep Chetan | grep cm'
alias gf='git fetch origin -p'
alias gro='git rebase origin/master'

alias gro12='git rebase origin/IVM_REL_0_12'
alias gro14='git rebase origin/IVM_REL_0_14'

alias gcch12='git branch | grep ^* | cut -d " " -f2 | xargs -n 1 git diff origin/IVM_REL_0_12 >& changes.diff'
function gbn12() {
    git checkout -b $1 origin/IVM_REL_0_12
}
function gup12() {
    git checkout -b $1 origin/$1
    git rebase origin/IVM_REL_0_12
    git push -f origin $1
    git checkout master
    git branch -D $1
}
alias gcch14='git branch | grep ^* | cut -d " " -f2 | xargs -n 1 git diff origin/IVM_REL_0_14 >& changes.diff'
function gbn14() {
    git checkout -b $1 origin/IVM_REL_0_14
}
function gup14() {
    git checkout -b $1 origin/$1
    git rebase origin/IVM_REL_0_14
    git push -f origin $1
    git checkout master
    git branch -D $1
}
alias grok8='git rebase origin/k8_master'

alias gcchk8='git branch | grep ^* | cut -d " " -f2 | xargs -n 1 git diff origin/k8_master >& changes.diff'
function gbnk8() {
    git checkout -b $1 origin/k8_master
}
function gupk8() {
    git checkout -b $1 origin/$1
    git rebase origin/k8_master
    git push -f origin $1
    git checkout master
    git branch -D $1
}
alias grok8='git rebase origin/k8_master'

function gs_acl() {
    git diff origin/IVM_REL_0_$1 master include/im_acl_util.h > changes.diff
    git diff origin/IVM_REL_0_$1 master codegen/modules/ifcs/pi/acl.yaml >> changes.diff
    git diff origin/IVM_REL_0_$1 master codegen/modules/ifcs/pd/teralynx/acl/acl.yaml >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_acl_util.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_acl_util.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_pd_impl_teralynx_acl.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_pd_impl_teralynx_acl.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_action.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_action.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_comparator.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_comparator.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_compressed_ip.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_compressed_ip.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_counter.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_counter.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_dlp_drop.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_dlp_drop.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_match.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_match.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_meter.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_meter.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_table.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/ii_tl_acl_table.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/acl/im_acl_util.c >> changes.diff
}

function gs_fpf() {
    git diff origin/IVM_REL_0_$1 master codegen/modules/ifcs/pi/fpf.yaml > changes.diff
    git diff origin/IVM_REL_0_$1 master codegen/modules/ifcs/pd/teralynx/fpf/fpf.yaml >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/fpf/ii_pd_impl_teralynx_fpf.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/fpf/ii_pd_impl_teralynx_fpf.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/fpf/ii_pd_teralynx_fpf.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/fpf/ii_pd_teralynx_fpf.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/fpf/ii_tl_fpf_aux_data.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/fpf/ii_tl_fpf_aux_data.h >> changes.diff
}

function gs_telem() {
    git diff origin/IVM_REL_0_$1 master codegen/modules/ifcs/pi/telemetry.yaml > changes.diff
    git diff origin/IVM_REL_0_$1 master codegen/modules/ifcs/pd/teralynx/telemetry/telemetry.yaml >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/telemetry/ii_pd_impl_teralynx_telemetry.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/telemetry/ii_pd_impl_teralynx_telemetry.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/telemetry/ii_pd_teralynx_telemetry.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/telemetry/ii_pd_teralynx_telemetry.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/telemetry/ii_telemetry_acl.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/telemetry/ii_telemetry_acl.h >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/telemetry/ii_telemetry_vxlan_gpe.c >> changes.diff
    git diff origin/IVM_REL_0_$1 master src/lib/telemetry/ii_telemetry_vxlan_gpe.h >> changes.diff
}

alias m='make swdevsim -j32'
alias cm='make clean && make swdevsim -j32'

alias fm='make swdevsim -j32 FAST_BUILD=1'
alias fcm='make clean && make swdevsim -j32 FAST_BUILD=1'

alias mp='make pensim -j32'
alias cmp='make clean && make pensim -j32'

alias k2gm='git checkout k2_master'
function k2gbn() {
    git checkout -b $1 origin/k2_master
}
alias k2gro='git rebase origin/k2_master'


alias abtm='/home/builder/inno_projects/abt.py --enqueue -u cmurthy  --mergeready -m '
alias abts='/home/builder/inno_projects/abt.py --enqueue -u cmurthy  -m '
alias abtr='/home/builder/inno_projects/abt.py --enqueue -u cmurthy --regress_quick -m '
alias abtl='/home/builder/inno_projects/abt.py -a build,test -t ifcs '
alias abtb='/home/builder/inno_projects/abt.py -a build -t ifcs -w  $WORKSPACE'

alias abtm11='/home/builder/inno_projects/abt.py --enqueue -u cmurthy -p IVM_REL_0_11  --mergeready -m '
alias abts11='/home/builder/inno_projects/abt.py --enqueue -u cmurthy -p IVM_REL_0_11  -m '
alias abtr11='/home/builder/inno_projects/abt.py --enqueue -u cmurthy -p IVM_REL_0_11 --regress_quick -m '

alias abtm12='/home/builder/inno_projects/abt.py --enqueue -u cmurthy -p IVM_REL_0_12  --mergeready -m '
alias abts12='/home/builder/inno_projects/abt.py --enqueue -u cmurthy -p IVM_REL_0_12  -m '
alias abtr12='/home/builder/inno_projects/abt.py --enqueue -u cmurthy -p IVM_REL_0_12 --regress_quick -m '

function wn() {
    export SWDEV_SERVER=localhost
    export IFCS_TARGET=modeltest
    export SWDEV_PORT='6700'
    export WORKSPACE=`pwd`
    export WS=`pwd`
    export IFCS_INIT_FILE=configs/yaml/model/inno.config.yaml
    echo "Setting workspace to $WORKSPACE"
}

alias bmt='bld-modeltest'
alias bifcs='bld-ifcs'
alias ball='bldall'
alias backup='/vol/proj/.zfs/snapshots'

alias ifcs='cd $WORKSPACE/ifcs'
alias codegen='cd $WORKSPACE/ifcs/codegen'
alias mt='cd $WORKSPACE/model_test'
alias tests='cd $WORKSPACE/model_test/tests'


#! /bin/bash

alias ws='cd $WS'

function setws()
{
    export WSNAME=$1
    export WS=$HOME/project/$WSNAME
    export WORKSPACE=$WS
    export WSNUMBER=`echo $WSNAME | cut -c 3-`
    export SWDEV_PORT=`expr $SWDEV_PORT_START + $WSNUMBER \* 5`
    export SWDEV_PORT2=`expr $SWDEV_PORT_START2 + $WSNUMBER \* 5`
    export SWDEV_PORT3=`expr $SWDEV_PORT_START3 + $WSNUMBER \* 5`
    KVER=$(uname -r | sed -e 's/-.*//')
    echo WORKSPACE = $WORKSPACE
    echo IFCS_TARGET = $IFCS_TARGET
    echo KERNEL_VERSION = $KVER

    export PYTHONPATH=${WORKSPACE}/ifcs/install/${KVER}/${IFCS_TARGET}/pyctypes/
    export PYTHONPATH="$PYTHONPATH:${WORKSPACE}/model_test/infra/"
    export PYTHONPATH="$PYTHONPATH:${WORKSPACE}/model_test/include/gen/"
    export PYTHONPATH="$PYTHONPATH:${WORKSPACE}/model_test/tests/common/"
    export PYTHONPATH="$PYTHONPATH:${WORKSPACE}/ifcs/devtest/"
    export PYTHONPATH="$PYTHONPATH:${WORKSPACE}/model_test/"
    export PYTHONPATH="$PYTHONPATH:${WORKSPACE}/model_test/build/pyctypes/"

    echo PYTHONPATH = ${PYTHONPATH}

    cd $WORKSPACE/ifcs
    export LD_LIBRARY_PATH=${WORKSPACE}/ifcs/install/${KVER}/${IFCS_TARGET}/lib:${WORKSPACE}/tps/grpc/${KVER}/lib/opt:${LD_LIBRARY_PATH};
    export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${WORKSPACE}/model_test/build/lib;

    echo LD_LIBRARY_PATH = ${LD_LIBRARY_PATH}
}

function __tot_repo()
{
    cd $WS/$1
    echo "============== Updating Repo: $1 =================="
    git pull --rebase
}

function tot()
{
    pushd .
    __tot_repo build_tools
    __tot_repo common
    __tot_repo ifcs
    __tot_repo inno_projects
    __tot_repo inno_sim
    __tot_repo model
    __tot_repo model_test
    __tot_repo pen
    __tot_repo dps
    cd $WS
    popd
}

function __rel12_repo()
{
    cd $WS/$1
    echo "============== Updating Repo: $1 to REL 12 =================="
    git checkout master
    git pull
    git branch -D IVM_REL_0_12
    git checkout -b IVM_REL_0_12 origin/IVM_REL_0_12
    git pull --rebase
}

function rel12()
{
    pushd .
    __rel12_repo build_tools
    __rel12_repo common
    __rel12_repo ifcs
    __rel12_repo inno_projects
    __rel12_repo inno_sim
    __rel12_repo model
    __rel12_repo model_test
    __rel12_repo pen
    __rel12_repo dps
    cd $WS
    popd
}

function __rel14_repo()
{
    cd $WS/$1
    echo "============== Updating Repo: $1 to REL 14 =================="
    git checkout master
    git pull
    git branch -D IVM_REL_0_14
    git checkout -b IVM_REL_0_14 origin/IVM_REL_0_14
    git pull --rebase
}

function rel14()
{
    pushd .
    __rel14_repo build_tools
    __rel14_repo common
    __rel14_repo ifcs
    __rel14_repo inno_projects
    __rel14_repo inno_sim
    __rel14_repo model
    __rel14_repo model_test
    __rel14_repo pen
    __rel14_repo dps
    cd $WS
    popd
}

function __k8_repo()
{
    cd $WS/$1
    echo "============== Updating Repo: $1 to K8 =================="
    git checkout master
    git pull
    git branch -D $2
    git checkout -b $2 origin/$2
    git pull --rebase
}

function k8()
{
    pushd .
    __k8_repo build_tools k8_master
    __k8_repo common k8_master
    __k8_repo ifcs k8_emul_master
    __k8_repo inno_projects k8_master
    __k8_repo inno_sim k8_master
    __k8_repo model k8_master
    __k8_repo model_test k8_master
    __k8_repo pen k8_master
    __k8_repo dps k8_master
    cd $WS
    popd
}

function refresh()
{
    source ~/.bashrc
}

function cleanall()
{
    cd $WS/pen && make clean || return 1
    cd $WS/ifcs && make clean || return 1
    cd $WS/model && make clean || return 1
    cd $WS/model_test && make clean || return 1
    cd $WS
}

function brel()
{
    source $WS/ifcs/tools/env_source/env-reset.sh
    cd $WS/pen && make clean && make release || return 1
    cd $WS/model && make clean && make release || return 1
    cd $WS/model_test && make clean && make release|| return 1
    cd $WS/dps && make clean && make all || return 1
    cd $WS/ifcs && make clean && make release FAST_BUILD=1 || return 1
    cd $WS
}

function brel-32()
{
    source $WS/ifcs/tools/env_source/env-reset.sh
    cd $WS/pen && make clean && make release-32 || return 1
    cd $WS/model_test && make clean && make all || return 1
    cd $WS/dps && make clean && make all || return 1
    cd $WS/ifcs && make clean && make release-32 FAST_BUILD=1 || return 1
    cd $WS
}

function bld-modeltest()
{
    source $WS/ifcs/tools/env_source/env-reset.sh
    cd $WS/dps && make clean && make all || return 1
    cd $WS/pen && make clean && make modeltest || return 1
    cd $WS/ifcs && make clean && make modeltest -j32 FAST_BUILD=1 || return 1
    cd $WS/model && make clean && make async || return 1
    cd $WS/model_test && make clean && make || return 1
    cd $WS
}

function bld-ifcs()
{
    source $WS/ifcs/tools/env_source/env-reset.sh
    cd $WS/pen && make clean && make pensdk || return 1
    cd $WS/model && make clean && make asyncsdk -j32 || return 1
    cd $WS/dps && make clean && make all || return 1
    cd $WS/model_test && make clean && make all || return 1
    cd $WS/ifcs && make clean && make swdevsim -j32 FAST_BUILD=1  || return 1
#    cd $WS/ifcssai && make clean && make swdevsim -j32  || return 1
    cd $WS
}

function bld-device()
{
    source $WS/ifcs/tools/env_source/env-reset.sh
    cd $WS/model_test && make clean && make all || return 1
    source $WS/ifcs/tools/env_source/env-x86_64-svk.sh
    cd $WS/pen && make clean && make emulation || return 1
    cd $WS/dps && make clean && make all || return 1
    cd $WS/ifcs && make clean && make device -j32   || return 1
#    cd $WS/ifcssai && make clean && make device -j32 MCU_I2C=1  || return 1
    cd $WS
}

function bld-ifcs-pensim()
{
    source $WS/ifcs/tools/env_source/env-reset.sh
    cd $WS/pen && make clean && make pensdk || return 1
    cd $WS/pen && make clean && make modeltest || return 1
    cd $WS/model && make clean && make asyncsdk || return 1
    cd $WS/model_test && make clean && make || return 1
    cd $WS/ifcs && make clean && make pensim FAST_BUILD=1 || return 1
    cd $WS
}


function startmodel()
{
    cd $WS/model/
    echo "Starting Model with port = $SWDEV_PORT"
    ./olympus -p $SWDEV_PORT
}

function __build_cscope_files()
{
    find ./ -name '*.py' > cscope.files
    find ./ -name '*.h' >> cscope.files
    find ./ -name '*.c' >> cscope.files
    find ./ -name '*.C' >> cscope.files
    find ./ -name '*.H' >> cscope.files
    find ./ -name '*.cpp' >> cscope.files
    find ./ -name '*.hpp' >> cscope.files
}

function __build_cscope()
{
    echo "Building cscope for $1"
    __build_cscope_files
    cscope -Rb
}

function mkcscope()
{
    __build_cscope
}


#! /bin/bash

function mkws_old()
{
    GITURL="https://git.corp.innovium.com/"

    echo "`date` : Cloning repos..."

    git clone -q ${GITURL}/sw/ifcs.git;             echo "`date` :    'ifcs'"
    git clone -q ${GITURL}/sw/pen.git;              echo "`date` :    'pen'"
    git clone -q ${GITURL}/sw/common.git;           echo "`date` :    'common'"
    git clone -q ${GITURL}/sw/system_test.git;      echo "`date` :    'system_test'"
    git clone -q ${GITURL}/refModel/model.git;      echo "`date` :    'model'"
    git clone -q ${GITURL}/refModel/model_test.git; echo "`date` :    'model_test'"
    git clone -q ${GITURL}/sw/inno_projects.git;    echo "`date` :    'inno_projects'"

    echo ""
}

function mkws()
{
    if [ -z $1 ]; then
        echo "Usage: mkws <wsdirname>"
        return -1
    fi
    /home/builder/inno_projects/ipm -ci SDK_with_model $1
    cd $1
    git clone https://git.corp.innovium.com/factory_profiles/olympus_fp.git
    git clone https://git.corp.innovium.com/sw/aapl.git
    cp ~/.git.pre-commit ifcs/.git/hooks/pre-commit

    chmod 777 .

#    git clone https://git.corp.innovium.com/refModel/model_test.git
#    git clone https://git.corp.innovium.com/factory_profiles/olympus_fp.git
#    git clone https://git.corp.innovium.com/sw/ifcssai.git
#    git clone https://git.corp.innovium.com/arch/dps.git
#    git clone https://git.corp.innovium.com/sw/ixnetwork.git
#    cp ~/.git.pre-commit ifcs/.git/hooks/pre-commit
#    rm ~/proj_logs.txt
}


function k2mkws()
{
    if [ -z $1 ]; then
        echo "Usage: k2mkws <wsdirname>"
        return -1
    fi
    /home/builder/inno_projects/ipm -ci SDK_with_k2_model $1
}

function mkifcs()
{
    git clone https://git.corp.innovium.com/sw/ifcs.git
    cp ~/.git.pre-commit ifcs/.git/hooks/pre-commit
}

function lsc()
{
    pushd .
    for i in `/bin/ls -1 $WORKSPACE/`
    do
        cd $WORKSPACE//$i
        if [ -d ".git" ]; then
            echo "List changeset for $i"
            git status $* -uno
            echo ""
        fi
    done
    popd
}

function gbma()
{
    pushd .
    for i in `/bin/ls -1 $WORKSPACE/`
    do
        cd $WORKSPACE//$i
        if [ -d ".git" ]; then
            echo "List of My branches for $i"
            git for-each-ref --format="%(committerdate) %09 %(authorname) %09 %(refname)" | sort -k5n -k2M -k3n -k4n | grep Chetan
            echo ""
        fi
    done
    popd
}

function rsed()
{
    find ./ -type f -exec sed -i -e "s/$1/$2/g" {} \;
}
export JOBNUM=32

function f()
{
    find . -name $1
}

alias bl='bugzilla --nosslverify --bugzilla bugz.corp.innovium.com --username cmurthy login '
alias bugs='bugzilla --nosslverify --bugzilla bugz.corp.innovium.com query -a cmurthy@innovium.com -s CONFIRMED'
